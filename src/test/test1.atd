
type ext_type <ocaml from="AnotherModule"> = abstract
type simple_record = {
  one: string;
  two: string list option;
  three: [Int of int | Float of float];
}
type simple_variant = [
  | One
  | Two of (simple_record * int)
  | Rec of simple_variant
  | Double of (int * string) list
]
type inheriting = [
  | One_more of int option
  | I of int
  | inherit simple_variant
]
type ('a, 'b) result = [
  | Ok of 'a
  | Error of 'b
]
type tuple = (int * (inheriting list, simple_record) result * ext_type)
